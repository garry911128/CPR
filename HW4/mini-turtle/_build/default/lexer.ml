# 3 "lexer.mll"
 
  open Lexing
  open Parser

  (* raise exception to report a lexical error *)
  exception Lexing_error of string

  (* note : remember to call the Lexing.new_line function
     at each carriage return ('\n' character) *)


# 14 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\002\000\238\255\239\255\240\255\241\255\011\000\243\255\
    \244\255\245\255\012\000\001\000\000\000\000\000\000\000\000\000\
    \003\000\002\000\004\000\000\000\000\000\006\000\000\000\255\255\
    \000\000\005\000\010\000\011\000\254\255\005\000\015\000\253\255\
    \012\000\017\000\020\000\001\000\006\000\007\000\013\000\252\255\
    \027\000\027\000\016\000\251\255\025\000\024\000\022\000\250\255\
    \037\000\249\255\021\000\038\000\248\255\039\000\040\000\032\000\
    \247\255\001\000\237\255\236\255\004\000\254\255\000\000\255\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\013\000\255\255\
    \255\255\255\255\009\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\001\000\255\255\
    ";
  Lexing.lex_default =
   "\255\255\255\255\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\000\000\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \000\000\057\000\000\000\000\000\061\000\000\000\255\255\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\002\000\003\000\058\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\063\000\007\000\009\000\059\000\008\000\062\000\006\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\057\000\005\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\021\000\012\000\014\000\023\000\048\000\017\000\011\000\
    \024\000\026\000\040\000\037\000\050\000\038\000\025\000\044\000\
    \016\000\018\000\013\000\053\000\015\000\032\000\019\000\020\000\
    \022\000\029\000\027\000\028\000\030\000\031\000\033\000\034\000\
    \036\000\039\000\041\000\042\000\043\000\045\000\035\000\046\000\
    \047\000\049\000\051\000\052\000\054\000\055\000\056\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\255\255\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\057\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\062\000\000\000\000\000\001\000\000\000\060\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\006\000\000\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\020\000\000\000\000\000\022\000\013\000\000\000\000\000\
    \016\000\025\000\035\000\036\000\012\000\037\000\024\000\014\000\
    \000\000\017\000\000\000\011\000\000\000\015\000\018\000\019\000\
    \021\000\026\000\025\000\027\000\029\000\030\000\032\000\033\000\
    \034\000\038\000\040\000\041\000\042\000\044\000\034\000\045\000\
    \046\000\048\000\050\000\051\000\053\000\054\000\055\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\057\000\255\255\255\255\060\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 16 "lexer.mll"
                         ( FORWARD )
# 145 "lexer.ml"

  | 1 ->
# 17 "lexer.mll"
                         ( PENUP )
# 150 "lexer.ml"

  | 2 ->
# 18 "lexer.mll"
                         ( PENDOWN )
# 155 "lexer.ml"

  | 3 ->
# 19 "lexer.mll"
                         ( TURNLEFT )
# 160 "lexer.ml"

  | 4 ->
# 20 "lexer.mll"
                         ( TURNRIGHT )
# 165 "lexer.ml"

  | 5 ->
# 21 "lexer.mll"
                         ( COLOR )
# 170 "lexer.ml"

  | 6 ->
# 22 "lexer.mll"
                         ( COLOR_NAME "red" )
# 175 "lexer.ml"

  | 7 ->
# 23 "lexer.mll"
                         ( COLOR_NAME "blue" )
# 180 "lexer.ml"

  | 8 ->
# 24 "lexer.mll"
                         ( COLOR_NAME "green" )
# 185 "lexer.ml"

  | 9 ->
let
# 25 "lexer.mll"
                  int
# 191 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 25 "lexer.mll"
                         ( INT (int_of_string int) )
# 195 "lexer.ml"

  | 10 ->
# 26 "lexer.mll"
                         ( PLUS )
# 200 "lexer.ml"

  | 11 ->
# 27 "lexer.mll"
                         ( MINUS )
# 205 "lexer.ml"

  | 12 ->
# 28 "lexer.mll"
                         ( TIMES )
# 210 "lexer.ml"

  | 13 ->
# 29 "lexer.mll"
                         ( DIVIDE )
# 215 "lexer.ml"

  | 14 ->
# 30 "lexer.mll"
                         ( SEMI )
# 220 "lexer.ml"

  | 15 ->
# 31 "lexer.mll"
                         ( EOF )
# 225 "lexer.ml"

  | 16 ->
# 32 "lexer.mll"
                         ( token lexbuf )
# 230 "lexer.ml"

  | 17 ->
# 33 "lexer.mll"
                         ( token lexbuf )
# 235 "lexer.ml"

  | 18 ->
# 34 "lexer.mll"
                         ( token lexbuf )
# 240 "lexer.ml"

  | 19 ->
# 35 "lexer.mll"
                         ( comment lexbuf )
# 245 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
   __ocaml_lex_comment_rec lexbuf 60
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 38 "lexer.mll"
                         ( token lexbuf )
# 257 "lexer.ml"

  | 1 ->
# 39 "lexer.mll"
                         ( comment lexbuf )
# 262 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

